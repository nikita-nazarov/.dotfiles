" =============================================================================
" Plugin Manager Setup
" =============================================================================
"
set ft=vim

" Install the plugin manager if it doesn't exist
let s:plugin_manager=expand('~/.vim/autoload/plug.vim')
let s:plugin_url='https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

if empty(glob(s:plugin_manager))
  echom 'vim-plug not found. Installing...'
  if executable('curl')
    silent exec '!curl -fLo ' . s:plugin_manager . ' --create-dirs ' .
          \ s:plugin_url
  elseif executable('wget')
    call mkdir(fnamemodify(s:plugin_manager, ':h'), 'p')
    silent exec '!wget --force-directories --no-check-certificate -O ' .
          \ expand(s:plugin_manager) . ' ' . s:plugin_url
  else
    echom 'Could not download plugin manager. No plugins were installed.'
    finish
  endif
  augroup vimplug
    autocmd!
    autocmd VimEnter * PlugInstall
  augroup END
endif

" Create a horizontal split at the bottom when installing plugins
let g:plug_window = 'vertical topleft new'

let g:plug_dir = expand('~/.vim/bundle')
call plug#begin(g:plug_dir)

Plug 'udalov/kotlin-vim'
	
" Themes
Plug 'doums/darcula'
	
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'

Plug 'FooSoft/vim-argwrap'

" For snippets
Plug 'garbas/vim-snipmate' 
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'honza/vim-snippets'
Plug 'preservim/nerdtree'

Plug 'tpope/vim-fugitive'

Plug 'dracula/vim', { 'as': 'dracula' }

call plug#end()   "required

" Snipmate settings
let g:snipMate = { 'snippet_version' : 1 }

let g:dracula_italic = 0 

let NERDTreeShowHidden=1

set diffopt+=vertical
